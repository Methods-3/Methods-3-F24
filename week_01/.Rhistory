library(fields)
?image.plot()
model <- lm(Reaction ~ Days, data=sleepstudy)
library(lme4)
model <- lm(Reaction ~ Days, data=sleepstudy)
X <- model.matrix(model)
image.plot(X)
image.plot(t(X))
?image.plot
?seq
?image
image.plot(1:2, 1:180, t(X))
image.plot(1:2, 1:180, t(X), xaxt='n')
length(X)
dim(X)
library(fields)
image.plot(x=1:dim(X)[2], 1:dim(X)[1], t(X), xlab='Predictors',
ylab='Observations')
X
library(fields)
image.plot(x=1:dim(X)[2], 1:dim(X)[1], t(X), xlab='Predictors',
ylab='Observations')
axis(1, 1:2, 1:2)
library(fields)
image.plot(x=1:dim(X)[2], 1:dim(X)[1], t(X), xlab='Predictors',
ylab='Observations', xaxt='n')
axis(1, 1:2, 1:2)
library(fields)
image.plot(x=1:dim(X)[2], 1:dim(X)[1], t(X), xlab='Predictors',
ylab='Observations', xaxt='n', main='Design matrix: X')
axis(1, 1:2, 1:2)
model <- lmer(Reaction ~ Days + (Days | subject), data=sleepstudy)
model <- lmer(Reaction ~ Days + (Days | Subject), data=sleepstudy)
model
sigma(model)
getME(model, 'u')
length(getME(model, 'u'))
length(getME(model, 'ud'))
?getME
model
VarCorr(model)
X <- model.matrix(model)
X
Z <- getME(model, 'Z')
Z
image.plot(x=1:dim(X)[2], 1:dim(X)[1], t(X), xlab='Predictors',
ylab='Observations', xaxt='n', main='Design matrix: X')
axis(1, 1:2, 1:2)
image.plot(x=1:dim(Z)[2], 1:dim(Z)[1], t(Z), xlab='Predictors',
ylab='Observations', xaxt='n', main='Design matrix: Z')
dim(Z)
image.plot(x=1:dim(Z)[2], 1:dim(Z)[1], t(Z), xlab='Predictors',
ylab='Observations', xaxt='n', main='Design matrix: Z')
dim(X)
1:dim(Z)[2]
image.plot(Z)
image(Z)
?image.ploit
?image.plot
image.plot(x=1:dim(Z)[2], 1:dim(Z)[1], t(as.matrix(Z)), xlab='Predictors',
ylab='Observations', xaxt='n', main='Design matrix: Z')
axis(1, 1:36, 1:36)
model <- lmer(Reaction ~ Days + (Days || Subject), data=sleepstudy)
model
VarCorr(model)
model <- lmer(Reaction ~ Days + (Days | Subject), data=sleepstudy)
model2 <- lmer(Reaction ~ Days + (Days || Subject), data=sleepstudy)
model
model2
rm(model2)
getME(model, 'X')
vcov(model)
model
fitted.values(model)
sleepstudy$Reaction - fitted.values(model)
(sleepstudy$Reaction - fitted.values(model))^2
sum((sleepstudy$Reaction - fitted.values(model))^2)
linear.model <- lm(Reaction ~ Days, sleepstudy)
sum((sleepstudy$Reaction - fitted.values(linar.model))^2)
sum((sleepstudy$Reaction - fitted.values(linear.model))^2)
library(reticulate)
repl_python()
library(reticulate)
repl_python()
